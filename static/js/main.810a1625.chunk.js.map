{"version":3,"sources":["hooks/use-input.js","components/BasicForm.js","App.js","index.js"],"names":["initialStateValue","value","isTouched","inputReducer","state","action","type","useInput","validateValue","useReducer","inputState","dispatch","valueIsValid","hasError","isValid","valueChangeHandler","event","target","inputBlurHandler","reset","BasicForm","props","trim","firstName","firstNameIsValid","firstNameHasError","firstNameChangeHandler","firstNameBlurHandler","firstNameReset","lastName","lastNameIsValid","lastNameHasError","lastNameChangeHandler","lastNameBlurHandler","lastNameReset","includes","email","emailIsValid","emailHasError","emailChangeHandler","emailBlurHandler","emailReset","formIsValid","firstNameClasses","lastNameClasses","emailClasses","onSubmit","preventDefault","console","log","className","htmlFor","onBlur","onChange","disabled","App","ReactDOM","createRoot","document","getElementById","render"],"mappings":"yMAEMA,EAAoB,CACxBC,MAAO,GACPC,WAAW,GAGPC,EAAe,SAAfA,EAAgBC,EAAOC,GAC3B,MAAoB,UAAhBA,EAAOC,KACF,CAAEL,MAAOI,EAAOJ,MAAOC,UAAWE,EAAMF,WAE7B,SAAhBG,EAAOC,KACF,CAAEJ,WAAW,EAAMD,MAAOG,EAAMH,OAGrB,UAAhBI,EAAOC,KACF,CAAEJ,WAAW,EAAOD,MAAO,IAG7BE,GA8BMI,EA3BE,SAACC,GAChB,MAA+BC,qBAAWN,EAAcH,GAAxD,mBAAOU,EAAP,KAAmBC,EAAnB,KAEMC,EAAeJ,EAAcE,EAAWT,OACxCY,GAAYD,GAAgBF,EAAWR,UAa7C,MAAO,CACLD,MAAOS,EAAWT,MAClBa,QAASF,EACTC,WACAE,mBAhByB,SAACC,GAC1BL,EAAS,CAAEL,KAAM,QAASL,MAAOe,EAAMC,OAAOhB,SAgB9CiB,iBAbuB,SAACF,GACxBL,EAAS,CAAEL,KAAM,UAajBa,MAVY,WACZR,EAAS,CAAEL,KAAM,a,OCsENc,EAxGG,SAACC,GACjB,MAOId,GAAS,SAACN,GAAD,MAA4B,KAAjBA,EAAMqB,UANrBC,EADT,EACEtB,MACSuB,EAFX,EAEEV,QACUW,EAHZ,EAGEZ,SACoBa,EAJtB,EAIEX,mBACkBY,EALpB,EAKET,iBACOU,EANT,EAMET,MAGF,EAOIZ,GAAS,SAACN,GAAD,MAA4B,KAAjBA,EAAMqB,UANrBO,EADT,EACE5B,MACS6B,EAFX,EAEEhB,QACUiB,EAHZ,EAGElB,SACoBmB,EAJtB,EAIEjB,mBACkBkB,EALpB,EAKEf,iBACOgB,EANT,EAMEf,MAGF,EAOIZ,GAAS,SAACN,GAAD,OAAWA,EAAMkC,SAAS,QAN9BC,EADT,EACEnC,MACSoC,EAFX,EAEEvB,QACUwB,EAHZ,EAGEzB,SACoB0B,EAJtB,EAIExB,mBACkByB,EALpB,EAKEtB,iBACOuB,EANT,EAMEtB,MAGEuB,GAAc,EAEdlB,GAAoBM,GAAmBO,IACzCK,GAAc,GAGhB,IAaMC,EAAmBlB,EACrB,eACA,uBACEmB,EAAkBb,EACpB,eACA,uBAEEc,EAAeP,EAAgB,eAAiB,uBAEtD,OACE,uBAAMQ,SAvBkB,SAAC9B,GACzBA,EAAM+B,iBACDL,IAGLM,QAAQC,IAAI,WACZD,QAAQC,IAAI1B,EAAWM,GACvBmB,QAAQC,IAAIb,GACZR,IACAM,IACAO,MAaA,UACE,sBAAKS,UAAU,gBAAf,UACE,sBAAKA,UAAWP,EAAhB,UACE,uBAAOQ,QAAQ,OAAf,wBACA,uBACE7C,KAAK,OACLL,MAAOsB,EACP6B,OAAQzB,EACR0B,SAAU3B,IAEXD,GACC,mBAAGyB,UAAW,aAAd,iDAIJ,sBAAKA,UAAWN,EAAhB,UACE,uBAAOO,QAAQ,OAAf,uBACA,uBACE7C,KAAK,OACLL,MAAO4B,EACPuB,OAAQnB,EACRoB,SAAUrB,IAEXD,GACC,mBAAGmB,UAAW,aAAd,mDAIN,sBAAKA,UAAWL,EAAhB,UACE,uBAAOM,QAAQ,OAAf,4BACA,uBACE7C,KAAK,OACLL,MAAOmC,EACPgB,OAAQZ,EACRa,SAAUd,IAEXD,GACC,mBAAGY,UAAW,aAAd,6CAGJ,qBAAKA,UAAU,eAAf,SACE,wBAAQI,UAAWZ,EAAnB,0BCzFOa,MARf,WACE,OACE,qBAAKL,UAAU,MAAf,SACE,cAAC,EAAD,OCDOM,IAASC,WAAWC,SAASC,eAAe,SACpDC,OAAO,cAAC,EAAD,O","file":"static/js/main.810a1625.chunk.js","sourcesContent":["import { useReducer } from \"react\";\r\n\r\nconst initialStateValue = {\r\n  value: \"\",\r\n  isTouched: false,\r\n};\r\n\r\nconst inputReducer = (state, action) => {\r\n  if (action.type === \"INPUT\") {\r\n    return { value: action.value, isTouched: state.isTouched };\r\n  }\r\n  if (action.type === \"BLUR\") {\r\n    return { isTouched: true, value: state.value };\r\n  }\r\n\r\n  if (action.type === \"RESET\") {\r\n    return { isTouched: false, value: \"\" };\r\n  }\r\n\r\n  return inputReducer;\r\n};\r\n\r\nconst useInput = (validateValue) => {\r\n  const [inputState, dispatch] = useReducer(inputReducer, initialStateValue);\r\n\r\n  const valueIsValid = validateValue(inputState.value);\r\n  const hasError = !valueIsValid && inputState.isTouched;\r\n  const valueChangeHandler = (event) => {\r\n    dispatch({ type: \"INPUT\", value: event.target.value });\r\n  };\r\n\r\n  const inputBlurHandler = (event) => {\r\n    dispatch({ type: \"BLUR\" });\r\n  };\r\n\r\n  const reset = () => {\r\n    dispatch({ type: \"RESET\" });\r\n  };\r\n\r\n  return {\r\n    value: inputState.value,\r\n    isValid: valueIsValid,\r\n    hasError,\r\n    valueChangeHandler,\r\n    inputBlurHandler,\r\n    reset,\r\n  };\r\n};\r\n\r\nexport default useInput;\r\n\r\n// import { useState } from \"react\";\r\n\r\n// const useInput = (validateValue) => {\r\n//   const [enteredValue, setEnteredValue] = useState(\"\");\r\n//   const [isTouched, setIsTouched] = useState(false);\r\n//   const valueIsValid = validateValue(enteredValue);\r\n//   const hasError = !valueIsValid && isTouched;\r\n//   const valueChangeHandler = (event) => {\r\n//     setEnteredValue(event.target.value);\r\n//   };\r\n\r\n//   const inputBlurHandler = (event) => {\r\n//     setIsTouched(true);\r\n//   };\r\n\r\n//   const reset = () => {\r\n//     setEnteredValue(\"\");\r\n//     setIsTouched(false);\r\n//   };\r\n\r\n//   return {\r\n//     value: enteredValue,\r\n//     isValid: valueIsValid,\r\n//     hasError,\r\n//     valueChangeHandler,\r\n//     inputBlurHandler,\r\n//     reset,\r\n//   };\r\n// };\r\n\r\n// export default useInput;\r\n","import useInput from \"../hooks/use-input\";\n\nconst BasicForm = (props) => {\n  const {\n    value: firstName,\n    isValid: firstNameIsValid,\n    hasError: firstNameHasError,\n    valueChangeHandler: firstNameChangeHandler,\n    inputBlurHandler: firstNameBlurHandler,\n    reset: firstNameReset,\n  } = useInput((value) => value.trim() !== \"\");\n\n  const {\n    value: lastName,\n    isValid: lastNameIsValid,\n    hasError: lastNameHasError,\n    valueChangeHandler: lastNameChangeHandler,\n    inputBlurHandler: lastNameBlurHandler,\n    reset: lastNameReset,\n  } = useInput((value) => value.trim() !== \"\");\n\n  const {\n    value: email,\n    isValid: emailIsValid,\n    hasError: emailHasError,\n    valueChangeHandler: emailChangeHandler,\n    inputBlurHandler: emailBlurHandler,\n    reset: emailReset,\n  } = useInput((value) => value.includes(\"@\"));\n\n  let formIsValid = false;\n\n  if (firstNameIsValid && lastNameIsValid && emailIsValid) {\n    formIsValid = true;\n  }\n\n  const formSubmitHandler = (event) => {\n    event.preventDefault();\n    if (!formIsValid) {\n      return;\n    }\n    console.log(\"Entered\");\n    console.log(firstName, lastName);\n    console.log(email);\n    firstNameReset();\n    lastNameReset();\n    emailReset();\n  };\n\n  const firstNameClasses = firstNameHasError\n    ? \"form-control\"\n    : \"form-control invalid\";\n  const lastNameClasses = lastNameHasError\n    ? \"form-control\"\n    : \"form-control invalid\";\n\n  const emailClasses = emailHasError ? \"form-control\" : \"form-control invalid\";\n\n  return (\n    <form onSubmit={formSubmitHandler}>\n      <div className=\"control-group\">\n        <div className={firstNameClasses}>\n          <label htmlFor=\"name\">Frist Name</label>\n          <input\n            type=\"text\"\n            value={firstName}\n            onBlur={firstNameBlurHandler}\n            onChange={firstNameChangeHandler}\n          />\n          {firstNameHasError && (\n            <p className={\"error-text\"}>Please Enter A valued First Name</p>\n          )}\n        </div>\n\n        <div className={lastNameClasses}>\n          <label htmlFor=\"name\">Last Name</label>\n          <input\n            type=\"text\"\n            value={lastName}\n            onBlur={lastNameBlurHandler}\n            onChange={lastNameChangeHandler}\n          />\n          {lastNameHasError && (\n            <p className={\"error-text\"}>Please Enter A valued Last Name</p>\n          )}\n        </div>\n      </div>\n      <div className={emailClasses}>\n        <label htmlFor=\"name\">E-Mail Address</label>\n        <input\n          type=\"text\"\n          value={email}\n          onBlur={emailBlurHandler}\n          onChange={emailChangeHandler}\n        />\n        {emailHasError && (\n          <p className={\"error-text\"}>Please Enter A valued E-mail</p>\n        )}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default BasicForm;\n","import BasicForm from \"./components/BasicForm\";\n// import SimpleInput from \"./components/SimpleInput\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <BasicForm />\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n"],"sourceRoot":""}